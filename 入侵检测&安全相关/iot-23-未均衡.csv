模型,全名,预测速度,训练速度, 验证表现,,,,,,,,,调优参数,其他
,,,,roc_auc,accuracy,balanced_accuracy,mcc,f1,precision,recall,balanced_accuracy on all data,mcc on all data,,
XGB,XGBoost极端梯度提升,0.036482,26.480625,0.952070777390806,0.973520285560973,0.901227645196905,0.83094958269493,0.985526503713376,0.982007669612021,0.989070646623546,0.856607663298097,0.6004957732172,"{'n_estimators': 10000, 'learning_rate': 0.1, 'n_jobs': -1, 'proc.max_category_levels': 100, 'objective': 'binary:logistic', 'booster': 'gbtree', 'use_label_encoder': False, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.01, 'subsample': 1.0, 'colsample_bytree': 1.0, 'reg_alpha': 0.0, 'reg_lambda': 1.0} ",
RF,Random forest随机森林,52.815518,127.089743,0.952070777390806,0.973520285560973,0.901227645196905,0.83094958269493,0.985526503713376,0.982007669612021,0.989070646623546,0.867875992261889,0.650477657074228," 'n_estimators': 300,'n_jobs': -1,'random_state': 0,'bootstrap': True,",
GBM,LightGBM轻度梯度提升机,0.033031,6.523121,0.952281066138866,0.974135034878567,0.907056379854115,0.835918191002378,0.98585061883202,0.983152238243668,0.988563852251524,0.869993259828062,0.651843945331258,"{'learning_rate': 0.049883446878335284, 'num_boost_round': 100, 'num_leaves': 62, 'feature_fraction': 0.9618129346960314, 'min_data_in_leaf': 52} ",
CAT,CatBoost分割梯度提升,0.018343,60.923113,0.952183324740814,0.974075543009122,0.907446169339916,0.835695512819504,0.9858163270516,0.983238488077506,0.98840771863186,0.856885328256405,0.60088280406216,"{'iterations': 10000, 'learning_rate': 0.023861097124304616, 'random_seed': 0, 'allow_writing_files': False, 'eval_metric': 'Logloss', 'depth': 8, 'l2_leaf_reg': 3.1795327319875875} ",
XT,extremely randomized trees极度随机树,61.03294,114.922984,0.952178426487266,0.973551781256562,0.901453159447004,0.831185024845073,0.985543322529986,0.982051161496342,0.989060408353405,0.869407593340048,0.656595518086525,"n_estimators=100,criterion=""gini"",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features=""auto"",max_leaf_nodes=None,min_impurity_decrease=0.0",
NN,neural network implemented in Pytorch,0.225208,154.624502,0.951870578952963,0.973529617618925,0.904201631401934,0.831795888713877,0.98552246595304,0.92619858220994,0.988442272793589,0.853699475048988,0.596750369570625,"Sequential(   (0): Linear(in_features=30, out_features=128, bias=True)   (1): ReLU()   (2): Dropout(p=0.1, inplace=False)   (3): Linear(in_features=128, out_features=128, bias=True)   (4): ReLU()   (5): Linear(in_features=128, out_features=2, bias=True) ) (softmax): Softmax(dim=1)",
FastAI,neural network with FastAI backend,0.834242,1054.52275,0.949406560208861,0.97360077456081,0.905436541121603,0.832528314944151,0.985558242127101,0.98286814709974,0.988263103066106,0.85599128265592,0.60193548988931,"{'layers': None, 'emb_drop': 0.1, 'ps': 0.1, 'bs': 256, 'lr': 0.01, 'epochs': 30, 'early.stopping.min_delta': 0.0001, 'early.stopping.patience': 20, 'smoothing': 0.0}(embeds): ModuleList()   (emb_drop): Dropout(p=0.1, inplace=False)   (bn_cont): BatchNorm1d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)   (layers): Sequential(     (0): LinBnDrop(       (0): Linear(in_features=30, out_features=200, bias=False)       (1): ReLU(inplace=True)       (2): BatchNorm1d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)       (3): Dropout(p=0.1, inplace=False)     )     (1): LinBnDrop(       (0): Linear(in_features=200, out_features=100, bias=False)       (1): ReLU(inplace=True)       (2): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)       (3): Dropout(p=0.1, inplace=False)     )     (2): LinBnDrop(       (0): Linear(in_features=100, out_features=2, bias=True)     )   ) )",
